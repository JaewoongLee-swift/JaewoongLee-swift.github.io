I"Y<h2 id="1-시작하며">1. 시작하며</h2>

<p>[백준 - 단계별로 풀어보기] 중, 브루트 포스 단계의 분해합 문제를 풀게 되었다.<br />
<br />
문제를 처음 접했을 땐 굉장히 어렵다고 느껴졌지만 브루트 포스에 대한 개념을 익히니 크게 어렵지 않은 문제였다. <br />
<br />
브루트 포스에 대한 개념을 이해하면서 분해합 문제를 풀어보도록 하자</p>

<h2 id="2-브루트-포스">2. 브루트 포스</h2>
<p>브루트 포스 공격(brute-force attack, 무차별 대입 공격)은 암호학에서 특정한 암호를 풀기 위해 가능한 모든 값을 대입하는 것을 의미한다.<br />
<br />
예를 들어, 4자리 수의 비밀번호를 풀기 위해 0000 ~ 9999 범위의 모든 숫자를 대입해 보는 것이다.<br />
<br />
따라서 알고리즘 문제에 대입하여 보면, ‘모든 경우의 수를 대입해 정답을 찾는 방법’ 이라고 이해할 수 있겠다.</p>

<p>출처 : <a href="https://ko.wikipedia.org/wiki/무차별_대입_공격">https://ko.wikipedia.org/wiki/무차별_대입_공격</a></p>

<h2 id="3-백준-2231번---분해합">3. 백준 2231번 - 분해합</h2>
<p>그러면 분해합 문제를 보도록 하자.<br />
<br />
<img width="942" alt="스크린샷 2021-12-11 오전 3 59 52" src="https://user-images.githubusercontent.com/83946704/145627452-ab489ea0-f41b-4aad-b973-18acf499f01f.png" />
<br /><br />
<img width="682" alt="스크린샷 2021-12-11 오전 4 00 18" src="https://user-images.githubusercontent.com/83946704/145627496-508400f3-27a7-4c64-b329-a07354640605.png" />
<br /><br /></p>

<p>분해합 문제는, 분해합으로 이루어진 입력 N을 받아 N의 생성자를 출력해야 한다.<br />
<br />
단, N을 이루는 생성자가 없을 경우 <code class="language-plaintext highlighter-rouge">0</code>을 출력해야 한다.<br />
<br />
이 문제는 브루트 포스의 개념을 모르고 보면 어떤 수학적 알고리즘을 찾아야 하는지 고민하게 될 것이다.<br />
<br />
본인도 이 알고리즘을 찾기 위해 많은 시간을 쏟았지만 브루트 포스를 이해하고 나선 크게 어렵지 않은 문제였다.<br />
<br /></p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="k">let</span> <span class="nv">N</span> <span class="o">=</span> <span class="kt">Int</span><span class="p">(</span><span class="nf">readLine</span><span class="p">()</span><span class="o">!</span><span class="p">)</span><span class="o">!</span>

<span class="kd">func</span> <span class="nf">disassembledSum</span><span class="p">(</span><span class="nv">number</span><span class="p">:</span> <span class="kt">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Int</span> <span class="p">{</span>
    <span class="k">var</span> <span class="nv">num</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="c1">// 입력값 N의 범위 : 1 ~ 1,000,000</span>
    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">1</span><span class="o">...</span><span class="mi">1000000</span> <span class="p">{</span>
        <span class="c1">// 1부터 1,000,000까지 모두 시도</span>
        <span class="n">num</span> <span class="o">=</span> <span class="n">i</span>

        <span class="c1">// 각 자리수 별로 더해주기 위해 String으로 변환</span>
        <span class="k">let</span> <span class="nv">stringInt</span> <span class="o">=</span> <span class="kt">String</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

        <span class="c1">// n은 String.element이기 때문에 다시 String으로 변환 후 Int형으로 변환</span>
        <span class="k">for</span> <span class="n">n</span> <span class="k">in</span> <span class="n">stringInt</span> <span class="p">{</span>
            <span class="k">let</span> <span class="nv">nums</span> <span class="o">=</span> <span class="kt">Int</span><span class="p">(</span><span class="kt">String</span><span class="p">(</span><span class="n">n</span><span class="p">))</span><span class="o">!</span>
            <span class="n">num</span> <span class="o">+=</span> <span class="n">nums</span>
        <span class="p">}</span>

        <span class="c1">// number(입력값 N)와 동일할 경우 리턴</span>
        <span class="k">if</span> <span class="n">num</span> <span class="o">==</span> <span class="n">number</span> <span class="p">{</span>
            <span class="k">return</span> <span class="n">i</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="c1">// 1부터 1,000,000까지의 경우의 수를 시도했음에도 일치하지 않을 경우 `0` 리턴</span>
    <span class="k">return</span> <span class="mi">0</span>
<span class="p">}</span>

<span class="nf">print</span><span class="p">(</span><span class="nf">disassembledSum</span><span class="p">(</span><span class="nv">number</span><span class="p">:</span> <span class="kt">N</span><span class="p">))</span></code></pre></figure>

:ET