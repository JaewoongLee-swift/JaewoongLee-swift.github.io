I"	<h2 id="1-reactive-x">1. Reactive X</h2>

<p>RxSwift를 배우기 위해 Rx, ReactiveX가 무엇인지 알고 지나가자.<br />
<br /></p>
<ul>
  <li>Reactive X란?
    <blockquote>
      <p>프로그래밍에서 데이터가 동기식이든, 비동기식이든 상관없이 명령형 프로그래밍 언어가 데이터 요소들에서 작동할 수 있도록 하는 도구.<br />
(위키백과 - ReactiveX)</p>
    </blockquote>
  </li>
</ul>

<p><br />
흠… 어렵다. 이해를 쉽게 하기위해 다른 블로그에서의 정리글을 옮겨보자면,</p>
<blockquote>
  <p>ReactiveX는 비동기에 대한 스트림(결과)를 관찰하고 그것에 반응해서 무언가를 할 수 있는 프로그래밍 패러다임</p>
</blockquote>

<p>(출처 : <a href="https://magi82.github.io/ios-rxswift-01/">https://magi82.github.io/ios-rxswift-01/</a>)</p>

<p>좀 더 이해를 쉽게 해보자면….<br />
<br />
비동기의 예로 서버통신에 ReactiveX를 사용한다면, 통신결과가 언제 나올지 관찰하고 통신결과에 반응해서 어떠한 행동을 할 수 있게 만들어주는 것이라 생각하면 되겠다.</p>

<h2 id="2-rxswift">2. RxSwift</h2>
<p>ReactiveX를 알았으니, RxSwift는 Swift언어에 ReactiveX를 입혔다는 것을 알 수 있다.<br />
<br />
조금 더 정확이 알아보자면,<br />
RxSwift는 기본적으로 비동기적으로 움직이는 애플의 api들과 수시로 상태가 변하는 환경에서 보다 직관적이고 효율적인 코드를 작성할 수 있게 도와준다.<br />
<br />
RxSwift를 사용하기 위해선 구성 요소를 알아야하는데 아래엔 다음 3가지를 설명하겠다.</p>
<ul>
  <li>Observable</li>
  <li>Operator</li>
  <li>Scheduler</li>
</ul>

<h3 id="2-1-observable">2-1. Observable</h3>
<p><code class="language-plaintext highlighter-rouge">Observable&lt;T&gt;</code>란?<br /></p>

<ol>
  <li>제너럴타입의 객체로, <code class="language-plaintext highlighter-rouge">T</code>형태의 데이터 snapshot을 전달 할 수 있는 일련의 이벤트를 비동기적으로 생성하는 기능을 가진다.</li>
  <li></li>
</ol>

<p><br /><br /><br /><br />
출처 : 30개 프로젝트로 배우는 iOS 앱 개발 with Swift 초격차 패키지 Online - part 4. 인스타그램 앱 만들기</p>
:ET