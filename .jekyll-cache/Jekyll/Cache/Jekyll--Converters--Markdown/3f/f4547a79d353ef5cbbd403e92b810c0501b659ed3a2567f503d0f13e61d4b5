I"*8<h2 id="1-custom-uiview를-사용할-때">1. custom UIView를 사용할 때</h2>
<p>인스타그램 유사 앱의 프로필 화면을 구현하는 중, 다음과 같은 화면을 구성하려 했다.<br />
<br /></p>
<center><img width="284" alt="스크린샷 2021-12-13 오전 3 46 41" src="https://user-images.githubusercontent.com/83946704/145725371-42f6b5d8-5c3a-4125-a758-76ef17b2bb0b.png" />&gt;</center>
<p><br />
프로필 화면에서 게시물, 팔로우, 팔로잉이 나타나는 부분은 각각의 게시물, 팔로우, 팔로잉의 텍스트 라벨로 나타내고 각 숫자 또한 텍스트 라벨로 나타내면 된다.<br />
<br />
하지만 각각 6개의 라벨을 따로 만들어주고 서로의 오토레이아웃을 설정해줄 경우 코드 구성이 복잡해질 뿐더러 유지보수에서도 불편하게 된다.<br />
<br />
따라서 숫자를 나타내는 라벨 1개, 숫자의 이름을 나타내는 라벨 1개가 포함된 custom UIView를 만들고 그로 인해 만들어진 custom class를 이용해서 3개의 View를 StackView로 만들어 보도록 하자.</p>

<h2 id="2-custom-uiview-생성">2. custom UIView 생성</h2>
<p>일단 swift파일을 생성해 Snapkit과 UIKit을 import해주고 필요한 이름으로 class 선언을 해준다.<br />
(Snpakit을 이용해 오토레이아웃을 설정하였음)<br />
<br />
그리고 필요한 두개의 라벨을 선언해주고 각각의 설정을 넣어준다.
<br /></p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">import</span> <span class="kt">Snapkit</span>
<span class="kd">import</span> <span class="kt">UIKit</span>

<span class="c1">// 최종 하위클래스이므로 final class로 선언</span>
<span class="kd">final</span> <span class="kd">class</span> <span class="kt">ProfileDataView</span><span class="p">:</span> <span class="kt">UIView</span> <span class="p">{</span>
  <span class="kd">private</span> <span class="kd">lazy</span> <span class="k">var</span> <span class="nv">titleLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
    <span class="n">label</span><span class="o">.</span><span class="n">font</span> <span class="o">=</span> <span class="o">.</span><span class="nf">systemFont</span><span class="p">(</span><span class="nv">ofSize</span><span class="p">:</span> <span class="mf">14.0</span><span class="p">,</span> <span class="nv">weight</span><span class="p">:</span> <span class="o">.</span><span class="n">medium</span><span class="p">)</span>
    <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"게시물"</span>

    <span class="k">return</span> <span class="n">label</span>
  <span class="p">}()</span>

  <span class="kd">private</span> <span class="kd">lazy</span> <span class="k">var</span> <span class="nv">countLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
    <span class="n">label</span><span class="o">.</span><span class="n">font</span> <span class="o">=</span> <span class="o">.</span><span class="nf">systemFont</span><span class="p">(</span><span class="nv">ofSize</span><span class="p">:</span> <span class="mf">14.0</span><span class="p">,</span> <span class="nv">weight</span><span class="p">:</span> <span class="o">.</span><span class="n">bold</span><span class="p">)</span>
    <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"100"</span>

    <span class="k">return</span> <span class="n">label</span>
  <span class="p">}()</span>

<span class="p">}</span></code></pre></figure>

<p><br />
그 다음 extention을 통해 레이아웃을 설정하는 함수를 만들고 StackView와 오토레이아웃 설정을 해준다</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">private</span> <span class="kd">extension</span> <span class="kt">ProfileDataView</span> <span class="p">{</span>
    <span class="kd">func</span> <span class="nf">setupLayout</span><span class="p">()</span> <span class="p">{</span>
        <span class="c1">// stackview는 순서에 영향을 받으므로 countLabel 먼저 넣어줌</span>
        <span class="k">let</span> <span class="nv">stackView</span> <span class="o">=</span> <span class="kt">UIStackView</span><span class="p">(</span><span class="nv">arrangedSubviews</span><span class="p">:</span> <span class="p">[</span> <span class="n">countLabel</span><span class="p">,</span> <span class="n">titleLabel</span> <span class="p">])</span>
        <span class="c1">// 세로배치, 가운데 정렬, 라벨 사이공간 4.0</span>
        <span class="n">stackView</span><span class="o">.</span><span class="n">axis</span> <span class="o">=</span> <span class="o">.</span><span class="n">vertical</span>
        <span class="n">stackView</span><span class="o">.</span><span class="n">alignment</span> <span class="o">=</span> <span class="o">.</span><span class="n">center</span>
        <span class="n">stackView</span><span class="o">.</span><span class="n">spacing</span> <span class="o">=</span> <span class="mf">4.0</span>

        <span class="c1">// View에 추가(Snapkit 사용)</span>
        <span class="nf">addSubview</span><span class="p">(</span><span class="n">stackView</span><span class="p">)</span>
        <span class="n">stackView</span><span class="o">.</span><span class="n">snp</span><span class="o">.</span><span class="n">makeConstraints</span><span class="p">{</span> <span class="nv">$0</span><span class="o">.</span><span class="n">edges</span><span class="o">.</span><span class="nf">equalToSuperview</span><span class="p">()</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<p><br />
우리는 3개의 뷰를 모두 100, 게시물 이란 내용으로 사용할 것이 아니다.<br />
<br />
따라서 상위 뷰에서 class 선언에 따라 필요한 데이터를 넣어줄 수 있도록 변수와 초기화 설정을 해주자.<br />
<br /></p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">final</span> <span class="kd">class</span> <span class="kt">ProfileDataView</span><span class="p">:</span> <span class="kt">UIView</span> <span class="p">{</span>
  <span class="kd">private</span> <span class="k">let</span> <span class="nv">title</span><span class="p">:</span> <span class="kt">String</span>
  <span class="kd">private</span> <span class="k">let</span> <span class="nv">count</span><span class="p">:</span> <span class="kt">Int</span>

  <span class="nf">init</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="kt">String</span><span class="p">,</span> <span class="nv">count</span><span class="p">:</span> <span class="kt">Int</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">self</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="n">title</span>
    <span class="k">self</span><span class="o">.</span><span class="n">count</span> <span class="o">=</span> <span class="n">count</span>

    <span class="k">super</span><span class="o">.</span><span class="nf">init</span><span class="p">(</span><span class="nv">frame</span><span class="p">:</span> <span class="o">.</span><span class="n">zero</span><span class="p">)</span>

    <span class="c1">//오토레이아웃 설정</span>
    <span class="nf">setupLayout</span><span class="p">()</span>
  <span class="p">}</span>

  <span class="kd">required</span> <span class="nf">init</span><span class="p">?(</span><span class="nv">coder</span><span class="p">:</span> <span class="kt">NSCoder</span><span class="p">)</span> <span class="p">{</span>
        <span class="nf">fatalError</span><span class="p">(</span><span class="s">"init(coder:) has not been implemented"</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="o">...</span>

<span class="p">}</span></code></pre></figure>

<p><br />
그리고 마지막으로 라벨에 임시적으로 설정했던 텍스트의 내용도 변경해주도록 하자</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">final</span> <span class="kd">class</span> <span class="kt">ProfileDataView</span><span class="p">:</span> <span class="kt">UIView</span> <span class="p">{</span>

  <span class="o">...</span>

  <span class="kd">private</span> <span class="kd">lazy</span> <span class="k">var</span> <span class="nv">titleLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
    <span class="n">label</span><span class="o">.</span><span class="n">font</span> <span class="o">=</span> <span class="o">.</span><span class="nf">systemFont</span><span class="p">(</span><span class="nv">ofSize</span><span class="p">:</span> <span class="mf">14.0</span><span class="p">,</span> <span class="nv">weight</span><span class="p">:</span> <span class="o">.</span><span class="n">medium</span><span class="p">)</span>
    <span class="c1">// label.text = "게시물"</span>
    <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">title</span>

    <span class="k">return</span> <span class="n">label</span>
  <span class="p">}()</span>

  <span class="kd">private</span> <span class="kd">lazy</span> <span class="k">var</span> <span class="nv">countLabel</span><span class="p">:</span> <span class="kt">UILabel</span> <span class="o">=</span> <span class="p">{</span>
    <span class="k">let</span> <span class="nv">label</span> <span class="o">=</span> <span class="kt">UILabel</span><span class="p">()</span>
    <span class="n">label</span><span class="o">.</span><span class="n">font</span> <span class="o">=</span> <span class="o">.</span><span class="nf">systemFont</span><span class="p">(</span><span class="nv">ofSize</span><span class="p">:</span> <span class="mf">14.0</span><span class="p">,</span> <span class="nv">weight</span><span class="p">:</span> <span class="o">.</span><span class="n">bold</span><span class="p">)</span>
    <span class="c1">// label.text = "100"</span>
    <span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"</span><span class="se">\(</span><span class="n">count</span><span class="se">)</span><span class="s">"</span>

    <span class="k">return</span> <span class="n">label</span>
  <span class="p">}()</span>
<span class="p">}</span></code></pre></figure>

<p><br />
custom UIView class 생성 완료!</p>

<h2 id="3-custom-uiview-사용">3. custom UIView 사용</h2>
<p>custom UIView를 사용할 class로 이동해 다음과 같이 선언해주고 stackview 및 오토레이아웃을 설정해주자.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">class</span> <span class="kt">ProfileViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>

  <span class="o">...</span>

  <span class="kd">private</span> <span class="k">let</span> <span class="nv">photoDataView</span> <span class="o">=</span> <span class="kt">ProfileDataView</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"게시물"</span><span class="p">,</span> <span class="nv">count</span><span class="p">:</span> <span class="mi">123</span><span class="p">)</span>
  <span class="kd">private</span> <span class="k">let</span> <span class="nv">followerDataView</span> <span class="o">=</span> <span class="kt">ProfileDataView</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"팔로워"</span><span class="p">,</span> <span class="nv">count</span><span class="p">:</span> <span class="mi">246</span><span class="p">)</span>
  <span class="kd">private</span> <span class="k">let</span> <span class="nv">followingDataView</span> <span class="o">=</span> <span class="kt">ProfileDataView</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"팔로잉"</span><span class="p">,</span> <span class="nv">count</span><span class="p">:</span> <span class="mi">369</span><span class="p">)</span>

  <span class="o">...</span>

  <span class="c1">// 오토레이아웃은 생략</span>
  <span class="k">let</span> <span class="nv">dataStackView</span> <span class="o">=</span> <span class="kt">UIStackView</span><span class="p">(</span><span class="nv">arrangedSubviews</span><span class="p">:</span> <span class="p">[</span><span class="n">photoDataView</span><span class="p">,</span> <span class="n">followerDataView</span><span class="p">,</span> <span class="n">followingDataView</span><span class="p">])</span>
  <span class="n">dataStackView</span><span class="o">.</span><span class="n">spacing</span> <span class="o">=</span> <span class="mf">4.0</span>
  <span class="n">dataStackView</span><span class="o">.</span><span class="n">distribution</span> <span class="o">=</span> <span class="o">.</span><span class="n">fillEqually</span>
<span class="p">}</span></code></pre></figure>

<p><br />
설정 후 계층(hierarchy)을 확인해보면,<br />
<br /></p>
<center><img width="284" alt="스크린샷 2021-12-13 오전 3 46 41" src="https://user-images.githubusercontent.com/83946704/145726595-58a16dbd-3ad0-41c8-a127-18f8616fa207.png" />&gt;</center>

<p><br /><br /><br /><br />
출처 : 30개 프로젝트로 배우는 iOS 앱 개발 with Swift 초격차 패키지 Online - part 4. 인스타그램 앱 만들기</p>
:ET